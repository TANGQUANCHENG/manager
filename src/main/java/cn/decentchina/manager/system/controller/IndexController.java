package cn.decentchina.manager.system.controller;

import cn.decentchina.manager.system.config.Constants;
import cn.decentchina.manager.system.config.CustomerConfig;
import cn.decentchina.manager.common.dto.SimpleMessage;
import cn.decentchina.manager.system.entity.Admin;
import cn.decentchina.manager.common.enums.ErrorCodeEnum;
import cn.decentchina.manager.system.service.AdminService;
import cn.decentchina.manager.system.service.BindService;
import cn.decentchina.manager.system.service.NavigationService;
import cn.decentchina.manager.system.service.PublicKeyService;
import cn.decentchina.manager.system.util.DesUtil;
import cn.decentchina.manager.system.vo.NavigationVO;
import cn.decentchina.manager.system.vo.TreeVO;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.apache.shiro.SecurityUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.security.interfaces.RSAPrivateKey;
import java.util.HashMap;
import java.util.List;

/**
 * @author 唐全成
 * @date 2018-05-18
 */
@SuppressWarnings("unused")
@Slf4j
@RequestMapping
@RestController
public class IndexController {
    @Resource
    private AdminService adminService;
    @Resource
    private NavigationService navigationService;
    @Resource
    private BindService bindService;
    @Resource
    private PublicKeyService publicKeyService;
    @Resource
    private CustomerConfig customerConfig;

    /**
     * 项目首页
     *
     * @return : org.springframework.web.servlet.ModelAndView
     */
    @RequestMapping("")
    public ModelAndView index() {
        ModelAndView md = new ModelAndView("index");
        try {
            Admin currentAdmin = adminService.getCurrentAdmin();
            List<NavigationVO> menu;
            if (currentAdmin.getSuperAdmin() != null && currentAdmin.getSuperAdmin()) {
                menu = navigationService.queryAll();
            } else {
                TreeVO treeVO = bindService.queryByRole(currentAdmin.getRoleId());
                menu = treeVO.getRows();
            }
            md.addObject("menus", menu);
        } catch (Exception e) {
            log.error("系统异常：[{}]", e.getMessage());
            e.printStackTrace();
        }
        return md;
    }

    /**
     * 工作台（介绍）
     *
     * @return : org.springframework.web.servlet.ModelAndView
     */
    @RequestMapping("/introduce")
    public ModelAndView introduce() {
        return new ModelAndView("introduce");
    }

    /**
     * 登录页面
     *
     * @param request 请求
     * @return : org.springframework.web.servlet.ModelAndView
     */
    @RequestMapping("/login")
    public ModelAndView login(HttpServletRequest request) {
        String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath() + "/";
        request.getSession().setAttribute("basePath", basePath);
        return new ModelAndView("login");
    }

    /**
     * 请求登录
     *
     * @param admin              登录信息
     * @param httpServletRequest 请求
     * @return : cn.decentchina.manager.common.dto.SimpleMessage
     */
    @RequestMapping("/signIn")
    public SimpleMessage signIn(Admin admin, HttpServletRequest httpServletRequest) {
        try {
            if (StringUtils.isBlank(admin.getPhoneNo())) {
                return new SimpleMessage(ErrorCodeEnum.NO, "请输入登录账号");
            }
            HttpSession session = httpServletRequest.getSession();
            RSAPrivateKey privateKey = (RSAPrivateKey) session.getAttribute(Constants.PRIVATE_KEY);
            String randomStr = (String) session.getAttribute(Constants.RANDOM_STR);
            //从session中删除
            session.removeAttribute(Constants.PRIVATE_KEY);
            session.removeAttribute(Constants.RANDOM_STR);
            return adminService.login(admin.getPhoneNo(), admin.getLoginPwd(), privateKey, randomStr, httpServletRequest);
        } catch (Exception e) {
            log.error("登录账号[{}]登录失败,时间为[{}],ip地址为[{}]", admin.getPhoneNo(), System.currentTimeMillis(),
                    httpServletRequest.getRemoteAddr(), e);
            return new SimpleMessage(ErrorCodeEnum.NO, "登录失败，请稍后再试");
        }
    }

    /**
     * 退出
     *
     * @return : org.springframework.web.servlet.ModelAndView
     */
    @RequestMapping("/logout")
    public SimpleMessage logout() {
        SecurityUtils.getSubject().logout();
        return new SimpleMessage(ErrorCodeEnum.OK);
    }

    /**
     * 未授权
     *
     * @return : org.springframework.web.servlet.ModelAndView
     */
    @RequestMapping("/403")
    public ModelAndView unauthorized() {
        return new ModelAndView("403");
    }

    /**
     * 获取公钥
     *
     * @param httpServletRequest 请求
     * @return : java.util.HashMap<java.lang.String,java.lang.String>
     */
    @RequestMapping("/getPublicKey")
    public HashMap<String, String> getPublicKey(HttpServletRequest httpServletRequest) {
        return publicKeyService.getPublicKey(httpServletRequest);
    }

    /**
     * 文档介绍
     *
     * @return : org.springframework.web.servlet.ModelAndView
     */
    @RequestMapping("/doc")
    public ModelAndView doc() {
        return new ModelAndView("doc");
    }


    public static void main(String[] args) throws Exception {

        String[] arr={"AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE436BE1D6B59C7E0D16E3C4CE2CBF16AFDD9F9898278EBB2024BE66DA5BDB59AA30831D7A30587EBAF6",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43B2F0528E268C8D8EE8692511E1B96B93E888DFEFF8258DED9A8540D5F3B8ABDAF521F27B5FF2A543",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE432A11920A6CA59C55468BBF42097D06AA5B3451A392849908876289393AA06F7F71DBF8A360028AEF",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE438F76156E37CC661B4DBD77E8032E04470E10379A4FF8277621208686AC5B899E0A1546D39E9F57A2",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE4359E75EA48DF947014B79ECC1647C4939E4BEEB4FEF2FEAC9786E047AA0083D4CDFB350D224C1F512",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE437577EDDF05F7AEDDC56CA9747704FF5DFEABF1D7206F5C208334D4C260C75E4196880E1E939093DF",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE438F0B16139CECC15B411F9ADA02A57B6BE76182709A5740853314D25099C48D5720D632BE82D50AA9",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE434984F54AD7C5D133DE0963635EB091D9A150E856C7046028DF75F5DC0C6047B99309B37B52C5DA6F",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE4382E263F74ED68C02D8C03BE9ABF5BC6B86FD812D8127B4C5924B4F8C445B6CB01349412D36E1F342",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43277CA317D828695C1AC74346F72255EEC347E8ADC858009472F7B929E145AEBDFDA7361AAC23F39D",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43B3F6AF25E1266942B654B268BD97838B208A2DDB4DBC82AF7DCE0AC326C894717956CB7F44260762",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE439EBB813EFD7BAD6314266B2C947F0C89A39E15DAFA136B8803787D8120C374C2BA9DBAA5BAD31417",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE4304E431535145714167304262A4B3A5D85E53AF5C922A8D95C5B905DDAE07559161F25568BAFCD41D",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE435CB588B7A82F235BD26CAB5AC2385BBE9023AF299A23A245EB6819A123E158F707ADFB7624AD5E2E",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43C360DD0C064073B630067136F331D9BBC3AFE7AA2FF59A06B23E99DEF21281BB016CFC6E764761B7",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE433269281B53D8510A3DAF4316E81E9E7B4112124AFC760E990A63F8925F907E881D430855C004B39F",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43B1EAA3462A1EA36595D2A6C51ADFA84606869EAF27D767FDF67056C67DF05EFFCCCDC643A9585FCB",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE4328BB50B500BA5E2DD8D7D73A612BD35E4DE31C1AF0F9CBC72621C00CECFADED0BD1A30984C031051",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE431949FD6C4ABD62D42404FE8ED1283D00E7F6834D8075360E6CC6F036D9B00859BBDD1C7EA799D867",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE439283548FBFB066BF934D1992E252D68BF99B50BFB1BFA0E2797BD068069206BE8E7F02CF167CB67B",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43889A337D0C29D3D2EC5DC3426E0A33F773A712E5D0C25447C8D78D31817E325D4630FA0B9106D274",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43758733C6296CA22A44989B5A295835ECECDDB6D7EABBC19706737D37D08DA29B5BC11661152D2C7D",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43D74605C7AEC0A41C2D09D6BAF116A75B3061BD50A0D20F0F788B83E17FF185427C360C27AD7BEF8A",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE4358FF390D19764DD42D89C0C5D1FD948CC2C0E5260101A41BD606CDB0135235DA65B5DB74B7B0404F",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE437BFB8F4E4DA21A527A5E49652B8C96E7C7B50F1B804BD1382C975E9F6A9E146C8333B1B7B0700791",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43462E72403711C1C181D230B0077E709557A74D45DDCB1C71F584CA8A2FC626B9EBCA49076FC9D710",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43712B2E56475056AADD1157DC718203C124B8586589F8D2F0643BFB2E797D17B6848B3603633360C7",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43FB8D41BF4440209DA7F8095AE005523D2B571A28B5F3FC4E04CA446ED7BF54D0AA67666BE1DE2571",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE436766031703D029CF373A9D5E28C834956BF03C01E3759F9046E2B8224DB534C36399953A0231228D",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE434BAF0AF79B248001C2252F96DDE6A94D74C38DAD7D7B25712EE595A4067659AD7349A556AF8D4B3C",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE437EB700AD0CCEA61F40B810BDC923F596A531944A2BE26C5631E11ABA1CF7BE465051FB19991C5622",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE437A6F69F9176EB022F883E06A2B7CF1BD71E64FAC1097B3C69E179A2EEA07AD2675B461E888A1010E",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE438B3862F1405A7930BE6810B68332FE4685E85510E8D2620E76130FCF3E539F05B60CC8B03FB9FB49",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43463878D5D955E26BD98AFD367EF8B0D0E5F1AECB0D17D67C2EE3C065E31F1BD1EBEF635FB474F46B",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43271BD1376562E77DA9498A6134CA270B4600CD511F60FC40357599989743655F4E7EBFDA5037D97C",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43F23DA4C8D6A1AE760D66774ED0ED31FC750A03FDF06FE719C945A2083D764381DE129D2AB27140FC",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE439F50970991CF1A4FBE21BB48BF9C6F660AACF5B7B6649D0E25C044F729E67994658B2579AB610F88",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43A8D5AEBBAEF9E3D96223F3C04BAC986AFE6E1234780D0A4AA8C4D88D5D5BD5BDB1645D0C7057DBCF",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43FCDCC3FAEE858F75520BDC75D0B408DEA038F2E7B67E80E48E8D140A178F06D06140932E835EBB73",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43F1A095883422FFD1108898EBC533E54A3D4C93C1F8BB37223DBE6388EC8929B6CC61E8E253C013FC",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE433D16FDD5F2B47AAFE8BAB643F60EE8FAB087754ED9B9B50D0029947DD41219F04817576C34D57588",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE437559AC370815C0CF3875ADC6BD78521A8F5E874D9D95BE258DE8B573564826C472475FB08D22727D",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE432D05AEA85B33EF158DEA8011551304440374F5705443E2B9490A8FE1873EFC83AC2852B3974B6CF2",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43B0885DF4EA7B6C6D8405AF9B9277A900E7A28B05C524D2EE2E462F55C6B4CAC4B48C9A7D786F5288",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE4300BCE93434B6A3A946C2DC66C011D10F077AD42D55BA93FB011CD87FC52B9EC662B5C68348A8C80D",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE4358A4C392585B12833236B6F49BBABFF81E3B4ED001FDD596C7376B3E4E399E5BD9F2CEA50E032406",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43C6815DAA6B4B0276E5ED341323255E102F1033E04234D15AD1C996AF1F93774ED0BB7FD788C9CD0E",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE43E75918588551DE45423DB12B77C481884D6DC116899BE0A0FE022215FFB23B4DABE5CF6D29E7DF31",
                "AC870A2C3CA0753CBB034F79B29E805C8188AF1C09E73EFA15613B0BB47825EAAD9DF0E6D736D6F43B69DE55AC0CFCDA79B04C7F1738AE439D1D0BB0AE0000EBADDAB65372BCA91B72E301AFBF27E176CA947B6FC6F374441E2248C6494E89E2"};
        for (String s : arr) {
            String decrypt = DesUtil.decrypt(s, DesUtil.CHARSET, "08e70836");
            String replace = StringUtils.replace(decrypt, "\"", "");
            String encrypt = DesUtil.encrypt(replace, DesUtil.CHARSET, "08e70836");
            System.out.println("update tbl_card set card_url='"+encrypt+"' where card_url='"+s+"';");
        }
    }
}
